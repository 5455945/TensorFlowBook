import os


# source code file count result:
#     cc  1309
#     md  1242
#     py  1235
#     h 734
#     html  107
#     ts  95
#     sh  81
#     proto 57
#     json  49
#     java  34
def get_file_suffix(file):
    index = file.rfind('.')
    return file[index + 1:] if index >= 0 else ''


# char frequency in py source code
def tensorflow_code_stat(data_path):
    tensorflow_code_files = []
    for root, dirs, files in os.walk(data_path):
        for file in files:
            code_file = os.path.join(root, file)
            file_suffix = get_file_suffix(code_file)
            if file_suffix == 'py':
                tensorflow_code_files.append(code_file)

    dict_c = {}
    for code_file in tensorflow_code_files:
        file_r = open(code_file, 'r', encoding='UTF-8')
        for data in file_r:
            for c in data:
                if c in dict_c:
                    dict_c[c] += 1
                else:
                    dict_c[c] = 1
        file_r.close()

    for c, c_freq in dict_c.items():
        print(c + '\t' + str(ord(c)) + '\t' + str(c_freq))


if __name__ == "__main__":
    # 需要注意这里的目录i相对位置，或者用绝对路径
    tensorflow_code_stat('../../../tensorflow/tensorflow/')
'''
#	35	278507
 	32	22269644
C	67	195582
o	111	4482778
p	112	2767253
y	121	865716
r	114	4523279
i	105	4313868
g	103	1117762
h	104	1593713
t	116	6038934
2	50	356485
0	48	468573
1	49	448245
5	53	86463
T	84	453378
e	101	8656155
n	110	4455952
s	115	5930738
F	70	171095
l	108	3345283
w	119	594435
A	65	334059
u	117	2178558
.	46	2103344
R	82	262307
v	118	686076
d	100	2250758

	10	3013538
L	76	184014
c	99	1968624
a	97	5034509
,	44	1604448
V	86	85934
(	40	1317136
"	34	811601
)	41	1314840
;	59	14841
m	109	1774492
f	102	1967961
x	120	463544
Y	89	39030
b	98	868729
:	58	709226
/	47	116930
I	73	267985
E	69	342527
N	78	310623
S	83	296461
-	45	162396
U	85	79575
q	113	209850
B	66	73496
W	87	60815
H	72	55985
O	79	195138
D	68	190840
K	75	29106
=	61	1550312
_	95	2931524
*	42	78463
z	122	196614
'	39	379320
k	107	322629
7	55	39329
G	71	81447
[	91	417829
]	93	417002
3	51	203258
+	43	48685
4	52	114384
%	37	44444
@	64	30535
P	80	104891
X	88	13313
6	54	91173
9	57	34282
8	56	49653
M	77	100858
{	123	70433
}	125	70367
>	62	21221
<	60	14353
j	106	61869
|	124	4892
\	92	69468
J	74	3632
!	33	7608
Z	90	5844
$	36	1699
`	96	408658
^	94	4767
~	126	1074
?	63	2574
Q	81	11146
		9	1238
&	38	1267
Т	1058	12
е	1077	17
с	1089	27
т	1090	12
ф	1092	40
ы	1099	40
в	1074	40
你	20320	10
好	22909	10
怎	24590	10
么	20040	10
样	26679	10
а	1072	45
﻿	65279	5
Н	1053	5
к	1082	20
и	1080	20
д	1076	15
р	1088	20
ж	1078	5
ј	1112	15
н	1085	5
п	1087	5
о	1086	5
м	1084	5
爱	29233	10
要	35201	5
依	20381	5
法	27861	5
治	27835	5
国	22269	5
是	26159	10
赞	36190	5
美	32654	5
那	37027	5
些	20123	5
谁	35841	5
公	20844	5
义	20041	5
的	30340	5
和	21644	5
惩	24809	5
罚	32602	5
恶	24694	5
人	20154	5
。	12290	5
韩	38889	5
非	38750	5
у	1091	10
г	1075	10
з	1079	10
ñ	241	10
ë	235	10
â	226	10
ô	244	10
à	224	10
æ	230	10
ø	248	10
⚡	9889	10
💩	128169	10
'''